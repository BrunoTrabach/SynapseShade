# creds.env.example — GUIA DE CREDENCIAIS (NÃO comite credenciais reais!)
#
# Para usar, crie um arquivo 'creds.env' com seus valores reais e exporte-os, 
# ou use 'source creds.env' antes de rodar o init-alpha.sh.
#
# Exemplo de como exportar e rodar em modo silencioso:
# source creds.env
# bash init-alpha.sh --silent

# ----------------------------------------------------------------------
# --- GITHUB (Obrigatório para CI/CD Remoto e Releases) ---
# Token com permissões 'repo' e 'workflow'.
GITHUB_TOKEN="ghp_XXX_REPLACE_GITHUB_TOKEN_XXX"
# Repositório no formato owner/repo (ex: BrunoTrabach/SynapseShade)
GITHUB_REPO="owner/repo"

# Variável de ambiente (opcional) que pode ser usada para especificar o arquivo de workflow
# GITHUB_WORKFLOW_FILE=".github/workflows/android-build.yml"


# ----------------------------------------------------------------------
# --- SEGURANÇA / AUTORIZAÇÃO LOCAL ---
# Senha para backup encriptado (opcional - usado por encrypted_backup)
ENCRYPT_PASSWORD="SuaSenhaForteParaBackupAES256"

# Senha de execução (opcional). Se não definida, o script calcula ou pede interativamente.
# O cálculo é: EXEC_PASS=$(date +%Y-%m-%d)$SEED | md5sum | cut -c1-6
# EXEC_PASS="$(printf '%s' "$(date +%Y-%m-%d)S3cr3tS33m2025SynapcMasterKey" | md5sum | cut -c1-6)"

# SEED para cálculo da senha dinâmica (se você mudá-lo no script, mude aqui)
# SEED="S3cr3tS33m2025SynapcMasterKey"


# ----------------------------------------------------------------------
# --- SERVIÇOS CLOUD (Opcional) ---
# Nome do Remote rclone configurado (use 'rclone config' para criar)
GDRIVE_REMOTE="gdrive-synapseshade"

# URL para onde enviar notificações (usado por send_webhook)
WEBHOOK_URL="https://webhook.site/XXX_REPLACE_WEBHOOK_URL_XXX"

# Credenciais Firebase/GCloud (opcional)
FIREBASE_PROJECT="seu-projeto-firebase-id"
FIREBASE_API_KEY="AIzaSy...SuaAPIKey"

